{"mappings":"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","sources":["src/js/modal.js","src/js/storage-utils.js","src/js/watched-list.js","src/js/queued-list.js","src/templates/renderModalCard.js"],"sourcesContent":["import FilmsLoadService from './films-request';\nimport renderModalCard from '../templates/renderModalCard';\nimport {\n  addWatchedBtnListener,\n  removeWatchedBtnListener,\n} from './watched-list';\nimport Notiflix from 'notiflix';\n\n// імпорт для кнопки add to queue\nimport { addQueuedBtnListener, removeQueuedBtnListener } from './queued-list';\n\nconst refs = {\n  modal: document.querySelector('[data-modal]'),\n  closeModalBtn: document.querySelector('[data-modal-close]'),\n  listOfFilm: document.querySelector('.film__list'),\n  card: document.querySelector('.modal__container'),\n  body: document.querySelector('body'),\n};\n\nrefs.listOfFilm.addEventListener('click', onClickFilm);\nrefs.closeModalBtn.addEventListener('click', onCloseModal);\nrefs.modal.addEventListener('click', onClickBackdropModalClose);\n\nasync function onClickFilm(e) {\n  try {\n    const chosenFilm = e.target.parentNode.parentNode;\n\n  const fls = new FilmsLoadService();\n  fls.id = chosenFilm.id;\n  const data = await fls.requestFilmDetails();\n\n  if (chosenFilm.nodeName !== 'LI') {\n    return;\n  }\n\n  refs.card.innerHTML = renderModalCard(data);\n    onOpenModal();\n  }\n  catch (err) {\n    console.error('Set state error: ', err.message);\n    Notiflix.Notify.failure('Sorry some problems on Server');\n  }\n}\n\nfunction onOpenModal() {\n  window.addEventListener('keydown', inKeyDownEscModalClose);\n  refs.modal.classList.toggle('backdrop--is-hidden');\n  refs.body.classList.toggle('modal-open');\n  addWatchedBtnListener();\n  addQueuedBtnListener();\n}\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', inKeyDownEscModalClose);\n  refs.modal.classList.toggle('backdrop--is-hidden');\n  refs.body.classList.toggle('modal-open');\n  removeWatchedBtnListener();\n  removeQueuedBtnListener();\n}\n\nfunction onClickBackdropModalClose(event) {\n  if (event.target === event.currentTarget) {\n    onCloseModal();\n  }\n}\n\nfunction inKeyDownEscModalClose(event) {\n  const KEY_CODE_ESCAPE = 'Escape';\n\n  if (event.code === KEY_CODE_ESCAPE) {\n    onCloseModal();\n  }\n}\n","import Notiflix from 'notiflix';\nimport { changeBtnStatus } from './watched-list';\nimport {changeBtnStatusQueue} from './queued-list';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '10px',\n  opacity: 1,\n  zindex: 9999,\n  timeout: 1000,\n});\n\n// ********** функции сохранения и считывания масива просмотренных фильмов из local storage\nconst saveList = (key, value, typeBtn) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n    typeBtn == true\n      ? Notiflix.Notify.success('Your movie has been added to the library')\n      : Notiflix.Notify.success('Your movie remove from library');\n    changeBtnStatus();\n\n    // for queue btn\n    // changeBtnStatusQueue ();\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n    Notiflix.Notify.failure('Failed to add to library');\n  }\n};\n\nconst saveListQ = (key, value, typeBtnQ) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n    typeBtnQ == true\n      ? Notiflix.Notify.success('Your movie has been added to the queued')\n      : Notiflix.Notify.success('Your movie remove from queued');\n      changeBtnStatusQueue ();\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n    Notiflix.Notify.failure('Failed to add to Queue');\n  }\n};\n\nconst loadList = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\nexport { saveList, loadList };\n\nconst loadListQ = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\nexport { saveListQ, loadListQ };\n\n","import FilmsLoadService from './films-request';\nimport { saveList, loadList } from './storage-utils';\n\n// створюємо змінну масиву фільмів і ключ для сховища, екземпляр класу для роботи з api\n\nconst moviesLoad = new FilmsLoadService();\nconst watchedKeyStorage = 'watchedKey';\nexport default watchedKeyStorage;\n\nlet watchedBtnEl;\n// функція додає слухача на кнопку \"add to watched\"\nexport function addWatchedBtnListener() {\n  watchedBtnEl = document.querySelector('.add-watchedbtn-js');\n  watchedBtnEl.addEventListener('click', addWatchedBtnClick);\n}\n\n// фукція видаляє слухача з кнопки \"add to watched\"\nexport function removeWatchedBtnListener() {\n  watchedBtnEl.removeEventListener('click', addWatchedBtnClick);\n}\n\n// функція-обробник події кліку на \"add to watched\"\n// кнопка повинна мати атрібути data-id з айді картки фільму , та data-action з \"add\" або \"remove\"\nfunction addWatchedBtnClick(evt) {\n  const idData = evt.target.dataset.id;\n  const action = evt.target.dataset.action;\n  switch (action) {\n    case 'add':\n      onWatchedList(idData);\n      break;\n    case 'remove':\n      removeItemFromList(idData);\n      break;\n  }\n}\n\n// функція перевірки наявності фільму у переліку, використовуємо при рендері одного фільму\n//  і надання потрібного атрибуту кнопці data-action\nexport function isMovieOnList(movieId) {\n  const items = loadList(watchedKeyStorage);\n  if (!items) {\n    return 'add';\n  }\n  const index = items.findIndex(item => item.id === movieId);\n  return index === -1 ? 'add' : 'remove';\n}\n\n// отримуємо об'єкт фільму\nasync function onWatchedList(movieId) {\n  try {\n    moviesLoad.id = movieId;\n    const response = await moviesLoad.requestFilmDetails();\n    response['genre_ids'] = response['genres'].map(obj => obj.id);\n    addItemToList(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// додаємо до переліку\nfunction addItemToList(data) {\n  const items = loadList(watchedKeyStorage);\n  if (!items || items.length == 0) {\n    const storageListArray = [];\n    storageListArray.push(data);\n    saveList(watchedKeyStorage, storageListArray, true);\n  } else {\n    items.push(data);\n    saveList(watchedKeyStorage, items, true);\n  }\n}\n\n// видаляємо з переліку\nfunction removeItemFromList(movieId) {\n  const items = loadList(watchedKeyStorage);\n\n  const index = items.findIndex(item => item.id === Number(movieId));\n\n  if (index === -1) {\n    return;\n  }\n  items.splice(index, 1);\n  saveList(watchedKeyStorage, items);\n  // onCloseModal();\n}\n// button change\nexport function changeBtnStatus() {\n  const statusBtn = watchedBtnEl.dataset.action;\n  statusBtn === 'add'\n    ? ((watchedBtnEl.dataset.action = 'remove'),\n      (watchedBtnEl.textContent = 'delete from watched'))\n    : ((watchedBtnEl.dataset.action = 'add'),\n      (watchedBtnEl.textContent = 'add to Watched'));\n}\nexport { watchedKeyStorage };\n","import FilmsLoadService from './films-request';\nimport { saveListQ, loadListQ } from './storage-utils';\nimport Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '10px',\n  opacity: 1,\n});\n\n// створюємо змінну масиву фільмів і ключ для сховища, екземпляр класу для роботи з api\n\nconst moviesLoads = new FilmsLoadService();\nconst queuedKeyStorage = 'queuedKey';\nexport default queuedKeyStorage;\n\nlet queuedBtnEl;\n// функція додає слухача на кнопку \"Added to queued\"\n\nexport function addQueuedBtnListener() {\n   queuedBtnEl = document.querySelector('.add-queuedbtn-js');\n   queuedBtnEl.addEventListener('click', addQueuedBtnClick);\n}\n// фукція видаляє слухача з кнопки \"Added to queued\"\n\nexport function removeQueuedBtnListener() {\n   queuedBtnEl.removeEventListener('click', addQueuedBtnClick);\n}\n\n// функція-обробник події кліку на \"Added to queued\"\n\nfunction addQueuedBtnClick(evt) {\n  const idData = evt.target.dataset.id\n  console.log(evt.target);\n\n  const action = evt.target.dataset.action;\n  switch (action) {\n    case 'add':\n      onQueuedList(idData);\n      break;\n    case 'remove':\n      removeItemFromList(idData);\n      break;\n  }\n}\n\n// функція перевірки наявності фільму у переліку\n\nexport function isMovieOnListQue(movieId) {\n  const items = loadListQ(queuedKeyStorage);\n  if (!items) {\n    return 'add';\n  }\n  const index = items.findIndex(item => item.id === movieId);\n  return index === -1 ? 'add' : 'remove';\n}\n\n// отримуємо об'єкт фільму\nasync function onQueuedList(movieId) {\n  try {\n    moviesLoads.id = movieId;\n    // console.log('moviesLoads', moviesLoads.id);\n\n    const response = await moviesLoads.requestFilmDetails();\n    response['genre_ids'] = response['genres'].map(obj => obj.id);\n    // console.log(response);\n    addItemToList(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// додаємо до переліку - Your movie is added to queued\n\nfunction addItemToList(data) {\n  const items = loadListQ(queuedKeyStorage);\n  if (!items || items.length == 0) {\n    const storageListArray = [];\n    storageListArray.push(data);\n    saveListQ(queuedKeyStorage, storageListArray, true);\n  } else {\n    items.push(data);\n    saveListQ(queuedKeyStorage, items, true);\n  }\n}\n\n// видаляємо з переліку\nfunction removeItemFromList(movieId) {\n  const items = loadListQ(queuedKeyStorage);\n  const index = items.findIndex(item => item.id === Number(movieId));\n\n  if (index === -1) {\n    return;\n  }\n  items.splice(index, 1);\n  saveListQ(queuedKeyStorage, items);\n}\nexport function changeBtnStatusQueue() {\n  const statusBtnQ = queuedBtnEl.dataset.action;\n  statusBtnQ === 'add'\n    ? ((queuedBtnEl.dataset.action = 'remove'),\n      (queuedBtnEl.textContent = 'delete from queued'))\n    : ((queuedBtnEl.dataset.action = 'add'),\n      (queuedBtnEl.textContent = 'add to queued'));\n}\nexport { queuedKeyStorage };\n\n","import { isMovieOnList } from '../js/watched-list';\nimport {isMovieOnListQue} from '../js/queued-list'\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport default function renderModalCard(film, dataAtribute) {\n  const {\n    id,\n    genres,\n    vote_average,\n    vote_count,\n    poster_path,\n    popularity,\n    original_title,\n    overview,\n    title,\n  } = film;\n\n  let watchedBtnText;\n  const watchedBtnAction = isMovieOnList(id);\n  watchedBtnAction === 'add'\n    ? (watchedBtnText = 'add to Watched')\n    : (watchedBtnText = 'delete from watched');\n  \n  let queueBtnText;\n  const queueBtnAction = isMovieOnListQue(id);\n  queueBtnAction === 'add'\n    ? (queueBtnText = 'add to Queued')\n    : (queueBtnText = 'delete from Queued');\n  \n  \n\n  let poster = '';\n  if (poster_path === null) {\n    poster =  `src = \"https://upload.wikimedia.org/wikipedia/commons/4/43/Illustration_of_an_image.png\"`\n    } else poster = `src =\"${BASE_URL}${poster_path}\"`  \n  \n  return `<div class=\"modal__image-container\" id='${id} data='${dataAtribute}'>\n        <img\n          class=\"modal__image\"\n          ${poster}\n          alt=\"Poster ${title}\"\n        />\n      </div>\n    <div class=\"film__info\">\n        <h2 class=\"film__title\">${addAudit(title)}</h2>\n        <ul class=\"film-modal__list\">\n          <li class=\"film__item\">\n            <p class=\"film__details\">Vote / Votes</p>\n            <p class=\"film__value\">\n              <span class=\"film__rating--orange\">${addAudit(\n                vote_average.toFixed(1)\n              )}</span>\n              <span class=\"film__rating--slash\"> / </span>\n              <span class=\"vote-count\">${addAudit(vote_count)}</span>\n            </p>\n          </li>\n          <li class=\"film__item\">\n            <p class=\"film__details\">Popularity</p>\n            <p class=\"film__value\">${addAudit(popularity.toFixed(1))}</p>\n          </li>\n          <li class=\"film__item\">\n            <p class=\"film__details\">Original title</p>\n            <p class=\"film__value\">${addAudit(original_title)}</p>\n          </li>\n          <li class=\"film__item\">\n            <p class=\"film__details\">Genre</p>\n            <p class=\"film__value\">${addAudit(ganresString(genres))}</p>\n          </li>\n        </ul>\n        <div class=\"film-about__wrapper\">\n          <h3 class=\"film-about__title\">About</h3>\n          <div class=\"film-about-text__wrapper\">\n            <p class=\"film-about__text\">\n            ${addAudit(overview)}\n            </p>\n          </div>\n          <div class=\"film-btn__wrapper\">\n            <button class=\"film-button add-watchedbtn-js\" type=\"button\" data-id=\"${id}\" data-action=\"${watchedBtnAction}\" >${watchedBtnText}</button>\n            <button class=\"film-button add-queuedbtn-js\" type=\"button\" data-id=\"${id}\" data-action=\"${queueBtnAction}\" >${queueBtnText}</button>\n          </div>\n        </div>`;\n}\n\nfunction ganresString(id) {\n  return id.map(({ name }) => name).join(', ');\n}\n\nfunction addAudit(string) {\n  if (string.length === 0) {\n    return 'no_info';\n  }\n  return string;\n}\n\n"],"names":["$bpxeT","parcelRequire","$iU1Pc","$parcel$interopDefault","Notify","init","width","position","distance","opacity","$1446294cad5fefa9$var$queuedBtnEl","$1446294cad5fefa9$var$moviesLoads","$3kV53","default","$1446294cad5fefa9$export$f13c8dd72440a2c3","$1446294cad5fefa9$var$addQueuedBtnClick","evt","idData","target","dataset","id","console","log","action","movieId","$1446294cad5fefa9$var$_onQueuedList","apply","this","arguments","$1446294cad5fefa9$var$onQueuedList","items","$49de3af53a9190cd$export$ccd8fe2f411bb2ad","index","findIndex","item","Number","splice","$49de3af53a9190cd$export$ee642fdc70f42802","$1446294cad5fefa9$var$removeItemFromList","$1446294cad5fefa9$export$379d139f74994ef2","$2TvXO","mark","_callee","response","requestFilmDetails","_ctx","sent","map","obj","$1446294cad5fefa9$var$addItemToList","error","t0","data","length","push","storageListArray","zindex","timeout","$0e85b0ebbb64235c$var$watchedBtnEl","$49de3af53a9190cd$export$218911bd4c8f0227","key","value","typeBtn","serializedState","JSON","stringify","localStorage","setItem","success","textContent","message","failure","typeBtnQ","$49de3af53a9190cd$export$ecc906937858f8cf","getItem","undefined","parse","$0e85b0ebbb64235c$var$moviesLoad","$0e85b0ebbb64235c$export$9b1eb12c7bdf1497","$0e85b0ebbb64235c$var$addWatchedBtnClick","$0e85b0ebbb64235c$var$_onWatchedList","$0e85b0ebbb64235c$var$onWatchedList","$0e85b0ebbb64235c$var$removeItemFromList","$0e85b0ebbb64235c$var$addItemToList","$a31f210fbab52dd8$export$2e2bcd8739ae039","film","dataAtribute","watchedBtnText","queueBtnText","genres","vote_average","vote_count","poster_path","popularity","original_title","overview","title","watchedBtnAction","queueBtnAction","poster","concat","$a31f210fbab52dd8$var$addAudit","toFixed","param","name","join","$a31f210fbab52dd8$var$ganresString","string","$40873ecf3c18e122$var$refs","modal","document","querySelector","closeModalBtn","listOfFilm","card","body","$40873ecf3c18e122$var$_onClickFilm","e","chosenFilm","fls","parentNode","nodeName","innerHTML","$40873ecf3c18e122$var$onOpenModal","window","addEventListener","$40873ecf3c18e122$var$inKeyDownEscModalClose","classList","toggle","$40873ecf3c18e122$var$onCloseModal","removeEventListener","event","code","currentTarget"],"version":3,"file":"index.3ded1a83.js.map"}